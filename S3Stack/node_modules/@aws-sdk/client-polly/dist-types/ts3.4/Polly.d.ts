import { HttpHandlerOptions as __HttpHandlerOptions } from "@smithy/types";
import {
  DeleteLexiconCommandInput,
  DeleteLexiconCommandOutput,
} from "./commands/DeleteLexiconCommand";
import {
  DescribeVoicesCommandInput,
  DescribeVoicesCommandOutput,
} from "./commands/DescribeVoicesCommand";
import {
  GetLexiconCommandInput,
  GetLexiconCommandOutput,
} from "./commands/GetLexiconCommand";
import {
  GetSpeechSynthesisTaskCommandInput,
  GetSpeechSynthesisTaskCommandOutput,
} from "./commands/GetSpeechSynthesisTaskCommand";
import {
  ListLexiconsCommandInput,
  ListLexiconsCommandOutput,
} from "./commands/ListLexiconsCommand";
import {
  ListSpeechSynthesisTasksCommandInput,
  ListSpeechSynthesisTasksCommandOutput,
} from "./commands/ListSpeechSynthesisTasksCommand";
import {
  PutLexiconCommandInput,
  PutLexiconCommandOutput,
} from "./commands/PutLexiconCommand";
import {
  StartSpeechSynthesisTaskCommandInput,
  StartSpeechSynthesisTaskCommandOutput,
} from "./commands/StartSpeechSynthesisTaskCommand";
import {
  SynthesizeSpeechCommandInput,
  SynthesizeSpeechCommandOutput,
} from "./commands/SynthesizeSpeechCommand";
import { PollyClient } from "./PollyClient";
export interface Polly {
  deleteLexicon(
    args: DeleteLexiconCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteLexiconCommandOutput>;
  deleteLexicon(
    args: DeleteLexiconCommandInput,
    cb: (err: any, data?: DeleteLexiconCommandOutput) => void
  ): void;
  deleteLexicon(
    args: DeleteLexiconCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteLexiconCommandOutput) => void
  ): void;
  describeVoices(): Promise<DescribeVoicesCommandOutput>;
  describeVoices(
    args: DescribeVoicesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeVoicesCommandOutput>;
  describeVoices(
    args: DescribeVoicesCommandInput,
    cb: (err: any, data?: DescribeVoicesCommandOutput) => void
  ): void;
  describeVoices(
    args: DescribeVoicesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeVoicesCommandOutput) => void
  ): void;
  getLexicon(
    args: GetLexiconCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetLexiconCommandOutput>;
  getLexicon(
    args: GetLexiconCommandInput,
    cb: (err: any, data?: GetLexiconCommandOutput) => void
  ): void;
  getLexicon(
    args: GetLexiconCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetLexiconCommandOutput) => void
  ): void;
  getSpeechSynthesisTask(
    args: GetSpeechSynthesisTaskCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetSpeechSynthesisTaskCommandOutput>;
  getSpeechSynthesisTask(
    args: GetSpeechSynthesisTaskCommandInput,
    cb: (err: any, data?: GetSpeechSynthesisTaskCommandOutput) => void
  ): void;
  getSpeechSynthesisTask(
    args: GetSpeechSynthesisTaskCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetSpeechSynthesisTaskCommandOutput) => void
  ): void;
  listLexicons(): Promise<ListLexiconsCommandOutput>;
  listLexicons(
    args: ListLexiconsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListLexiconsCommandOutput>;
  listLexicons(
    args: ListLexiconsCommandInput,
    cb: (err: any, data?: ListLexiconsCommandOutput) => void
  ): void;
  listLexicons(
    args: ListLexiconsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListLexiconsCommandOutput) => void
  ): void;
  listSpeechSynthesisTasks(): Promise<ListSpeechSynthesisTasksCommandOutput>;
  listSpeechSynthesisTasks(
    args: ListSpeechSynthesisTasksCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListSpeechSynthesisTasksCommandOutput>;
  listSpeechSynthesisTasks(
    args: ListSpeechSynthesisTasksCommandInput,
    cb: (err: any, data?: ListSpeechSynthesisTasksCommandOutput) => void
  ): void;
  listSpeechSynthesisTasks(
    args: ListSpeechSynthesisTasksCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListSpeechSynthesisTasksCommandOutput) => void
  ): void;
  putLexicon(
    args: PutLexiconCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<PutLexiconCommandOutput>;
  putLexicon(
    args: PutLexiconCommandInput,
    cb: (err: any, data?: PutLexiconCommandOutput) => void
  ): void;
  putLexicon(
    args: PutLexiconCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: PutLexiconCommandOutput) => void
  ): void;
  startSpeechSynthesisTask(
    args: StartSpeechSynthesisTaskCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<StartSpeechSynthesisTaskCommandOutput>;
  startSpeechSynthesisTask(
    args: StartSpeechSynthesisTaskCommandInput,
    cb: (err: any, data?: StartSpeechSynthesisTaskCommandOutput) => void
  ): void;
  startSpeechSynthesisTask(
    args: StartSpeechSynthesisTaskCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: StartSpeechSynthesisTaskCommandOutput) => void
  ): void;
  synthesizeSpeech(
    args: SynthesizeSpeechCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<SynthesizeSpeechCommandOutput>;
  synthesizeSpeech(
    args: SynthesizeSpeechCommandInput,
    cb: (err: any, data?: SynthesizeSpeechCommandOutput) => void
  ): void;
  synthesizeSpeech(
    args: SynthesizeSpeechCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: SynthesizeSpeechCommandOutput) => void
  ): void;
}
export declare class Polly extends PollyClient implements Polly {}
