import { SENSITIVE_STRING } from "@smithy/smithy-client";
import { PollyServiceException as __BaseException } from "./PollyServiceException";
export class LexiconNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "LexiconNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "LexiconNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, LexiconNotFoundException.prototype);
    }
}
export class ServiceFailureException extends __BaseException {
    constructor(opts) {
        super({
            name: "ServiceFailureException",
            $fault: "server",
            ...opts,
        });
        this.name = "ServiceFailureException";
        this.$fault = "server";
        Object.setPrototypeOf(this, ServiceFailureException.prototype);
    }
}
export const Engine = {
    LONG_FORM: "long-form",
    NEURAL: "neural",
    STANDARD: "standard",
};
export const LanguageCode = {
    ar_AE: "ar-AE",
    arb: "arb",
    ca_ES: "ca-ES",
    cmn_CN: "cmn-CN",
    cy_GB: "cy-GB",
    da_DK: "da-DK",
    de_AT: "de-AT",
    de_DE: "de-DE",
    en_AU: "en-AU",
    en_GB: "en-GB",
    en_GB_WLS: "en-GB-WLS",
    en_IE: "en-IE",
    en_IN: "en-IN",
    en_NZ: "en-NZ",
    en_US: "en-US",
    en_ZA: "en-ZA",
    es_ES: "es-ES",
    es_MX: "es-MX",
    es_US: "es-US",
    fi_FI: "fi-FI",
    fr_BE: "fr-BE",
    fr_CA: "fr-CA",
    fr_FR: "fr-FR",
    hi_IN: "hi-IN",
    is_IS: "is-IS",
    it_IT: "it-IT",
    ja_JP: "ja-JP",
    ko_KR: "ko-KR",
    nb_NO: "nb-NO",
    nl_BE: "nl-BE",
    nl_NL: "nl-NL",
    pl_PL: "pl-PL",
    pt_BR: "pt-BR",
    pt_PT: "pt-PT",
    ro_RO: "ro-RO",
    ru_RU: "ru-RU",
    sv_SE: "sv-SE",
    tr_TR: "tr-TR",
    yue_CN: "yue-CN",
};
export const Gender = {
    Female: "Female",
    Male: "Male",
};
export const VoiceId = {
    Aditi: "Aditi",
    Adriano: "Adriano",
    Amy: "Amy",
    Andres: "Andres",
    Aria: "Aria",
    Arlet: "Arlet",
    Arthur: "Arthur",
    Astrid: "Astrid",
    Ayanda: "Ayanda",
    Bianca: "Bianca",
    Brian: "Brian",
    Burcu: "Burcu",
    Camila: "Camila",
    Carla: "Carla",
    Carmen: "Carmen",
    Celine: "Celine",
    Chantal: "Chantal",
    Conchita: "Conchita",
    Cristiano: "Cristiano",
    Daniel: "Daniel",
    Danielle: "Danielle",
    Dora: "Dora",
    Elin: "Elin",
    Emma: "Emma",
    Enrique: "Enrique",
    Ewa: "Ewa",
    Filiz: "Filiz",
    Gabrielle: "Gabrielle",
    Geraint: "Geraint",
    Giorgio: "Giorgio",
    Gregory: "Gregory",
    Gwyneth: "Gwyneth",
    Hala: "Hala",
    Hannah: "Hannah",
    Hans: "Hans",
    Hiujin: "Hiujin",
    Ida: "Ida",
    Ines: "Ines",
    Isabelle: "Isabelle",
    Ivy: "Ivy",
    Jacek: "Jacek",
    Jan: "Jan",
    Joanna: "Joanna",
    Joey: "Joey",
    Justin: "Justin",
    Kajal: "Kajal",
    Karl: "Karl",
    Kazuha: "Kazuha",
    Kendra: "Kendra",
    Kevin: "Kevin",
    Kimberly: "Kimberly",
    Laura: "Laura",
    Lea: "Lea",
    Liam: "Liam",
    Lisa: "Lisa",
    Liv: "Liv",
    Lotte: "Lotte",
    Lucia: "Lucia",
    Lupe: "Lupe",
    Mads: "Mads",
    Maja: "Maja",
    Marlene: "Marlene",
    Mathieu: "Mathieu",
    Matthew: "Matthew",
    Maxim: "Maxim",
    Mia: "Mia",
    Miguel: "Miguel",
    Mizuki: "Mizuki",
    Naja: "Naja",
    Niamh: "Niamh",
    Nicole: "Nicole",
    Ola: "Ola",
    Olivia: "Olivia",
    Pedro: "Pedro",
    Penelope: "Penelope",
    Raveena: "Raveena",
    Remi: "Remi",
    Ricardo: "Ricardo",
    Ruben: "Ruben",
    Russell: "Russell",
    Ruth: "Ruth",
    Salli: "Salli",
    Seoyeon: "Seoyeon",
    Sergio: "Sergio",
    Sofie: "Sofie",
    Stephen: "Stephen",
    Suvi: "Suvi",
    Takumi: "Takumi",
    Tatyana: "Tatyana",
    Thiago: "Thiago",
    Tomoko: "Tomoko",
    Vicki: "Vicki",
    Vitoria: "Vitoria",
    Zayd: "Zayd",
    Zeina: "Zeina",
    Zhiyu: "Zhiyu",
};
export class InvalidNextTokenException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidNextTokenException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidNextTokenException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidNextTokenException.prototype);
    }
}
export class EngineNotSupportedException extends __BaseException {
    constructor(opts) {
        super({
            name: "EngineNotSupportedException",
            $fault: "client",
            ...opts,
        });
        this.name = "EngineNotSupportedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, EngineNotSupportedException.prototype);
    }
}
export const OutputFormat = {
    JSON: "json",
    MP3: "mp3",
    OGG_VORBIS: "ogg_vorbis",
    PCM: "pcm",
};
export const SpeechMarkType = {
    SENTENCE: "sentence",
    SSML: "ssml",
    VISEME: "viseme",
    WORD: "word",
};
export const TaskStatus = {
    COMPLETED: "completed",
    FAILED: "failed",
    IN_PROGRESS: "inProgress",
    SCHEDULED: "scheduled",
};
export const TextType = {
    SSML: "ssml",
    TEXT: "text",
};
export class InvalidTaskIdException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidTaskIdException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidTaskIdException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidTaskIdException.prototype);
    }
}
export class SynthesisTaskNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "SynthesisTaskNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "SynthesisTaskNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, SynthesisTaskNotFoundException.prototype);
    }
}
export class InvalidLexiconException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidLexiconException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidLexiconException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidLexiconException.prototype);
    }
}
export class InvalidS3BucketException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidS3BucketException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidS3BucketException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidS3BucketException.prototype);
    }
}
export class InvalidS3KeyException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidS3KeyException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidS3KeyException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidS3KeyException.prototype);
    }
}
export class InvalidSampleRateException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidSampleRateException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidSampleRateException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidSampleRateException.prototype);
    }
}
export class InvalidSnsTopicArnException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidSnsTopicArnException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidSnsTopicArnException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidSnsTopicArnException.prototype);
    }
}
export class InvalidSsmlException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidSsmlException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidSsmlException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidSsmlException.prototype);
    }
}
export class LanguageNotSupportedException extends __BaseException {
    constructor(opts) {
        super({
            name: "LanguageNotSupportedException",
            $fault: "client",
            ...opts,
        });
        this.name = "LanguageNotSupportedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, LanguageNotSupportedException.prototype);
    }
}
export class LexiconSizeExceededException extends __BaseException {
    constructor(opts) {
        super({
            name: "LexiconSizeExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "LexiconSizeExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, LexiconSizeExceededException.prototype);
    }
}
export class MarksNotSupportedForFormatException extends __BaseException {
    constructor(opts) {
        super({
            name: "MarksNotSupportedForFormatException",
            $fault: "client",
            ...opts,
        });
        this.name = "MarksNotSupportedForFormatException";
        this.$fault = "client";
        Object.setPrototypeOf(this, MarksNotSupportedForFormatException.prototype);
    }
}
export class MaxLexemeLengthExceededException extends __BaseException {
    constructor(opts) {
        super({
            name: "MaxLexemeLengthExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "MaxLexemeLengthExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, MaxLexemeLengthExceededException.prototype);
    }
}
export class MaxLexiconsNumberExceededException extends __BaseException {
    constructor(opts) {
        super({
            name: "MaxLexiconsNumberExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "MaxLexiconsNumberExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, MaxLexiconsNumberExceededException.prototype);
    }
}
export class UnsupportedPlsAlphabetException extends __BaseException {
    constructor(opts) {
        super({
            name: "UnsupportedPlsAlphabetException",
            $fault: "client",
            ...opts,
        });
        this.name = "UnsupportedPlsAlphabetException";
        this.$fault = "client";
        Object.setPrototypeOf(this, UnsupportedPlsAlphabetException.prototype);
    }
}
export class UnsupportedPlsLanguageException extends __BaseException {
    constructor(opts) {
        super({
            name: "UnsupportedPlsLanguageException",
            $fault: "client",
            ...opts,
        });
        this.name = "UnsupportedPlsLanguageException";
        this.$fault = "client";
        Object.setPrototypeOf(this, UnsupportedPlsLanguageException.prototype);
    }
}
export class SsmlMarksNotSupportedForTextTypeException extends __BaseException {
    constructor(opts) {
        super({
            name: "SsmlMarksNotSupportedForTextTypeException",
            $fault: "client",
            ...opts,
        });
        this.name = "SsmlMarksNotSupportedForTextTypeException";
        this.$fault = "client";
        Object.setPrototypeOf(this, SsmlMarksNotSupportedForTextTypeException.prototype);
    }
}
export class TextLengthExceededException extends __BaseException {
    constructor(opts) {
        super({
            name: "TextLengthExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "TextLengthExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, TextLengthExceededException.prototype);
    }
}
export const LexiconFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Content && { Content: SENSITIVE_STRING }),
});
export const GetLexiconOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Lexicon && { Lexicon: LexiconFilterSensitiveLog(obj.Lexicon) }),
});
export const PutLexiconInputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Content && { Content: SENSITIVE_STRING }),
});
export const SynthesizeSpeechOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
